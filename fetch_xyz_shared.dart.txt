// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
//
// fetch_xyz_shared
//
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

// ignore_for_file: depend_on_referenced_packages, avoid_print

import 'dart:io';
import 'package:archive/archive_io.dart';

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

Future<void> main(List<String> args) async {
  try {
    const URL = "https://github.com/robmllze/xyz_shared/archive/refs/heads/master.zip";
    final currentPath = Directory.current.path;
    final libPath = "$currentPath/lib";
    final d1 = Directory("$libPath/xyz_shared-master");
    final d2 = Directory("$libPath/xyz_shared");
    try {
      d1.deleteSync(recursive: true);
    } catch (_) {}
    await downloadAndExtractZip(URL, libPath);
    try {
      d2.deleteSync(recursive: true);
    } catch (_) {}
    d1.renameSync(d2.path);
    print("[fetch xyz_shared] Success!!!");
  } catch (e) {
    print("[fetch xyz_shared] Failed: $e");
  }
}

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

Future<void> downloadAndExtractZip(String url, String destinationFolder) async {
  final request = await HttpClient().getUrl(Uri.parse(url));
  final response = await request.close();
  final bytes = await response.fold<List<int>>([], (final a, final b) => a..addAll(b));
  var archive = ZipDecoder().decodeBytes(bytes);
  extractArchiveToDisk(archive, destinationFolder);
}
